{"version":3,"sources":["contexts/GameContext/index.jsx","data/core-rules.js","apps/RulesApp/components/Menu.jsx","apps/RulesApp/index.jsx","apps/GameApp/index.jsx","App.js","serviceWorker.js","index.js"],"names":["GameStateContext","React","createContext","gameState","setGameState","GameContextProvider","children","useLocalStorageState","players","name","faction","Provider","value","useGameContext","useContext","Rule","styled","span","Keyword","TableTitle","div","Table","table","TableHead","thead","TableBody","tbody","Red","DiceResult","text","tags","level","style","textAlign","MenuItem","id","label","subMenus","selected","setMenu","toggleMenuItem","event","stopPropagation","prev","updateMenus","menus","forceSelect","forceUnselect","map","menu","onClick","type","checked","onChange","length","sm","key","Menu","isOpen","onClose","useState","menuState","useEffect","StyledRoot","cursor","fontSize","item","debouncedResetScroll","debounce","window","scrollTo","Rules","nodes","node","idx","headings","1","h1","2","h2","3","h3","4","h4","5","h5","6","h6","Node","updateBreadcrumb","actualLevel","advanced","some","t","Heading","title","className","every","c","i","Container","Header","SearchInput","input","MenuContainer","RulesApp","dataSource","useMemo","coreRules","tyranidsFaq","bloodOfBaalFaq","tauFaq","theGreaterGoodFaq","thousandSonsFaq","ritualOfTheDamnedFaq","necronsFaq","factions","setFactions","menuOpen","setMenuOpen","filtered","setFiltered","query","setQuery","handleMenuClose","useCallback","debouncedApplyFilter","filter","toLowerCase","console","log","applyFilter","parentMatches","queryMatch","ReactDOMServer","renderToString","includes","filterMatch","match","n","handlMenuChange","menuToFactions","flat","padding","e","target","Player","nextPath","history","useHistory","player","setName","setFaction","Box","display","flexDirection","TextField","placeholder","FormControl","variant","InputLabel","Select","labelId","f","Button","color","updated","push","BATTLE_SIZES","COMBAT_PATROL","pts","CP","INCURSION","STRIKE_FORCE","ONSLAUGHT","GAME_MODES","MATCHED_PLAY","missions","size","source","briefing","rules","description","primary_objectives","secondary_objectives","category","Description","deployment","ChooseMission","mode","setMode","setSize","mission","setMission","Object","keys","find","m","GameApp","useRouteMatch","step","replace","path","maxWidth","App","to","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2f6025c1.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport useLocalStorageState from \"use-local-storage-state\";\n\nconst GameStateContext = React.createContext({\n  gameState: null,\n  setGameState: () => {},\n});\n\nexport const GameContextProvider = ({ children }) => {\n  const [gameState, setGameState] = useLocalStorageState(\"gameState\", {\n    players: [\n      {\n        name: \"\",\n        faction: \"\",\n      },\n      {\n        name: \"\",\n        faction: \"\",\n      },\n    ],\n  });\n\n  return (\n    <GameStateContext.Provider value={{ gameState, setGameState }}>\n      {children}\n    </GameStateContext.Provider>\n  );\n};\n\nexport const useGameContext = () => useContext(GameStateContext);\n","// https://regexr.com/59581\n// regex: \\s?([^\\n\\r]*)\n// list: {text:<>$1\",tags:['main'],children:[],},\\n\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Rule = styled.span`\n  font-weight: bold;\n`;\n\nconst Keyword = styled.span`\n    font-weight: 700;\n    font-variant: small-caps;\n    font-size: 21px;\n    letter-spacing: 1px;\n}\n`;\n\nconst TableTitle = styled.div`\n  text-transform: uppercase;\n  background: #120e0d;\n  color: #e7e7e5;\n  padding: 4px 8px;\n  font-size: 19px;\n  font-weight: 700;\n`;\n\nconst Table = styled.table`\n  border: 1px solid #120e0d;\n  width: 100%;\n  margin-bottom: 12px;\n  border-spacing: 0;\n  & th,\n  & td {\n    padding: 6px;\n  }\n`;\n\nconst TableHead = styled.thead`\n  background: #cdd2ce;\n  outline: 1px solid #120e0d;\n  & th {\n    font-size: 18px;\n  }\n`;\n\nconst TableBody = styled.tbody`\n  & tr:nth-child(even) {\n    background: #cdd2ce;\n  }\n  & tr:nth-child(odd) {\n    background: #eae9e6;\n  }\n`;\n\nconst Red = styled.span`\n  color: #9f191e;\n  font-weight: 700;\n`;\n\nconst DiceResult = styled.div`\n  font-weight: 700;\n  font-size: 18px;\n  text-align: center;\n`;\n\nexport default {\n  text: null,\n  tags: [\"core\"],\n  children: [\n    {\n      text: <>Basic Rules V1.1</>,\n      level: 1,\n      tags: [\"core\"],\n      children: [\n        {\n          text: <>Army</>,\n          level: 3,\n          tags: [\"core\"],\n          children: [\n            {\n              text: null,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      <Rule>Army:</Rule> Collection of models under your\n                      command.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Keywords</>,\n              level: 4,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      <Rule>Keywords:</Rule> Appear in rules in{\" \"}\n                      <Keyword>Keyword Bold</Keyword> font.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Keyworded rules apply to units and models with that\n                      keyword\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      <Keyword>{\"<Keywords>\"}</Keyword> are chosen by you when a\n                      unit is added to your army.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Units</>,\n              level: 4,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      <Rule>Unit:</Rule> A group of models from the same\n                      datasheet.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>Friendly models = all models in the same army.</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>Enemy models = all models in your opponent's army</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>Enemy units = all units in opponent’s army</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Unit Coherency</>,\n              level: 4,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      <Rule>Unit coherency:</Rule> 2\" horizontally + 5\"\n                      vertically.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Each model must be in unit coherency with one other model\n                      from own unit.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      While unit has 6+ models, each model must be in unit\n                      coherency with 2 other models from own unit\n                    </>\n                  ),\n                  tags: [\"core\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Engagement Range</>,\n              level: 4,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      <Rule>Engagement Range:</Rule> 1\" horizontally + 5\"\n                      vertically\n                    </>\n                  ),\n                  tags: [\"core\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Models cannot be set up within Engagement Range of enemy\n                      models.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          text: <>Measuring Distances</>,\n          level: 3,\n          tags: [\"core\"],\n          children: [\n            {\n              text: null,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: <>Distances measured in inches (\").</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Always measure closest distance between bases(or hulls).\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>Hull = Any part of a model that does not have a base.</>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>Can measure distances whenever you want.</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      If several units tied for closest, player resolving the\n                      rule selects which is closest.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Within and Wholly Within</>,\n              level: 4,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: <>Model within = any part of model’s base (or hull).</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Model wholly within = every part of model’s base (or\n                      hull).\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>Unit within = any model within.</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>Unit wholly within = every model wholly within</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          text: <>Dice</>,\n          level: 3,\n          tags: [\"core\"],\n          children: [\n            {\n              text: null,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: <>D6 = A six-sided dice.</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>D3 = D6 divided by 2 (rounding up).</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>All modifiers cumulative.</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Apply modifiers in the following order:\n                      division,multiplication, addition, then subtraction.\n                    </>\n                  ),\n                  tags: [\"core\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Round fractions up after all modifiers have been\n                      applied.Dice roll cannot be modified to less than 1.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Re-Rolls</>,\n              level: 4,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      <Rule>Re-roll:</Rule> Roll dice again.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>Re-rolls are applied before modifiers (if any).</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>A dice can never be re-rolled more than once.</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      <Rule>Unmodified dice:</Rule> Result of roll after\n                      re-rolls, but before modifiers (if any).\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Roll-Offs</>,\n              level: 4,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      <Rule>Roll-off:</Rule> Both players roll a D6 – highest\n                      wins.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>Roll again if a tie.</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Sequencing</>,\n              level: 4,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      If several rules must be resolved at the same time, the\n                      player whose turn it is chooses the order to resolve them.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Starting Strength, Half-Strength and Destroyed Units</>,\n              level: 4,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      <Rule>Starting Strength:</Rule> Number of models in unit\n                      when it is added to your army.\n                    </>\n                  ),\n                  tags: [\"core\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      When a model is destroyed, remove it from the battlefield.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      <Rule>Below Half-strength:</Rule> Number of models in unit\n                      is less than half its Starting Strength.\n                    </>\n                  ),\n                  tags: [\"core\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      When the last model in a unit is destroyed, the unit is\n                      said to be destroyed.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      text: <>Datasheet</>,\n      level: 2,\n      tags: [\"core\"],\n      children: [\n        {\n          text: <>Damage Tables</>,\n          level: 4,\n          tags: [\"core\"],\n          children: [\n            {\n              text: (\n                <>\n                  <Rule>Damage table:</Rule> Model’s characteristics change as\n                  it loses wounds.\n                </>\n              ),\n              tags: [\"core\"],\n              children: [],\n            },\n          ],\n        },\n        {\n          text: <>Modifying Characteristics</>,\n          level: 4,\n          tags: [\"core\"],\n          children: [\n            {\n              text: <>All characteristic modifiers are cumulative.</>,\n              tags: [\"core\"],\n              children: [],\n            },\n            {\n              text: (\n                <>\n                  Apply modifiers in the following order: division,\n                  multiplication, addition, then subtraction.\n                </>\n              ),\n              tags: [\"core\", \"9th\"],\n              children: [],\n            },\n            {\n              text: <>Round fractions up after applying all modifiers.</>,\n              tags: [\"core\"],\n              children: [],\n            },\n            {\n              text: <>S, T, A and Ld can never be modified below 1.</>,\n              tags: [\"core\"],\n              children: [],\n            },\n            {\n              text: (\n                <>\n                  Random Move characteristics determined for whole unit each\n                  time it moves.\n                </>\n              ),\n              tags: [\"core\"],\n              children: [],\n            },\n            {\n              text: (\n                <>\n                  Other random characteristics determined individually when\n                  characteristic required.\n                </>\n              ),\n              tags: [\"core\"],\n              children: [],\n            },\n            {\n              text: <>Characteristic of ‘-’ can never be modified.</>,\n              tags: [\"core\"],\n              children: [],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      text: <>Stragegic Reserves</>,\n      level: 3,\n      tags: [\"main\", \"9th\"],\n      children: [\n        {\n          text: <>Placing Units into Strategic Reserves</>,\n          level: 4,\n          tags: [\"main\", \"9th\"],\n          children: [],\n        },\n        {\n          text: <>Arriving from Strategic Reserves</>,\n          level: 4,\n          tags: [\"main\", \"9th\"],\n          children: [],\n        },\n        {\n          text: <>Setting up Strategic Reserve Units</>,\n          tags: [\"main\", \"9th\"],\n          children: [],\n        },\n        {\n          text: <>Advanced Rules</>,\n          level: 4,\n          tags: [\"main\", \"advanced\", \"9th\"],\n          children: [\n            {\n              text: <>Aircraft and Strategic Reserves</>,\n              level: 4,\n              tags: [\"main\"],\n              children: [],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      text: <>Actions</>,\n      level: 2,\n      tags: [\"main\", \"9th\"],\n      children: [\n        {\n          text: <>Performing Actions</>,\n          level: 3,\n          tags: [\"main\", \"9th\"],\n          children: [],\n        },\n        {\n          text: <>Performing Psychic Actions</>,\n          level: 3,\n          tags: [\"main\", \"9th\"],\n          children: [],\n        },\n      ],\n    },\n    {\n      text: <>Terrain Features</>,\n      level: 2,\n      tags: [\"main\", \"9th\"],\n      children: [\n        {\n          text: <>Terrain Categories</>,\n          level: 3,\n          tags: [\"main\", \"9th\"],\n          children: [\n            {\n              text: null,\n              level: 4,\n              tags: [\"main\", \"9th\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      Each terrain feature belongs to one of the following\n                      categories: Hills, Obstacles, Area Terrain or Buildings.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Some models can gain the nenefits of cover fom some\n                      Terrain features (see terrain traits).\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Hills</>,\n              level: 4,\n              tags: [\"main\", \"9th\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      Hills are considered to be part of the battlefield rather\n                      than a terrain feature.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>Models move over hils using normal rules for movement.</>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Models use normal rules to determine if a model behind a\n                      hill is visible.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: <>Hill cannot be attacked.</>,\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Obstacles</>,\n              level: 4,\n              tags: [\"main\", \"9th\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      Models move over Obstacles using normal rules for\n                      movement.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Models use normal rules to determine if a model behind an\n                      Obstacle is visible.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: <>Obstacles cannot be attacked.</>,\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      <Keyword>Infantry</Keyword>, <Keyword>Beasts</Keyword> and{\" \"}\n                      <Keyword>Swarm</Keyword> models receive the{\" \"}\n                      <Rule>benefit of cover</Rule> while within 3\", unless a\n                      straight line can be drawn from the attacker to ALL parts\n                      of the target model without it passing over or through\n                      this terrain feature.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Area Terrain</>,\n              level: 4,\n              tags: [\"main\", \"9th\"],\n              children: [\n                {\n                  text: <>Area Terrain has a footprint.</>,\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Footpring = boundary of terrain feature at ground level.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Models move over Area Terrain using normal rules for\n                      movement.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Models use normal rules to determine if a model behind\n                      Area Terrain is visible.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: <>Are Terrain cannot be attacked.</>,\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      <Keyword>Infantry</Keyword>, <Keyword>Beasts</Keyword> and{\" \"}\n                      <Keyword>Swarm</Keyword> models receive the{\" \"}\n                      <Rule>benefits of cover</Rule> while they are within it.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Buildings</>,\n              level: 4,\n              tags: [\"main\", \"9th\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      Buildings are considered to be units, rather than terrain\n                      features.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: <>Models cannot move across Buildings.</>,\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Models use normal rules to determine if a model behind a\n                      building is visible.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: <>Enemy Buildings can be attacked.</>,\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          text: <>Terrain Traits</>,\n          level: 3,\n          tags: [\"main\", \"9th\"],\n          children: [\n            {\n              text: <>Defensible</>,\n              level: 5,\n              tags: [\"main\", \"9th\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      <Keyword>Infantry</Keyword> units can Hold Steady or Set\n                      to Defend (if no enemy within Engagement Range).\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      <Rule>Hold Steady</Rule>: Overwatch attacks hit on 5+.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      <Rule>Set to Defend:</Rule>: Cannot fire Overwatch but add\n                      1 to hit rolls in next Fight phase.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Defence Line</>,\n              level: 5,\n              tags: [\"main\", \"9th\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      Can make a charge move against a unit within 1\" of this\n                      terrain feature.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: <>Can fight if within 2\" of ennemy</>,\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Breachable</>,\n              level: 5,\n              tags: [\"main\", \"9th\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      <Keyword>Infantry</Keyword>, <Keyword>Beasts</Keyword> and{\" \"}\n                      <Keyword>Swarm</Keyword> can move through walls, girder,\n                      chains and foliage.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Difficult Ground</>,\n              level: 5,\n              tags: [\"main\", \"9th\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      Substract 2\" when making a Normal Move, Advance, Fall Back\n                      or Charge move over this terrain feature (unlesss moving\n                      unit can <Keyword>Fly</Keyword>).\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Dense Cover</>,\n              level: 5,\n              tags: [\"main\", \"9th\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      Substract 1 from hit rolls made for ranged weapons if at\n                      least 3\" tall and no lines can be drawn without passing\n                      over this terrain feature between attacking model and any\n                      one model in target unit.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Does not apply to models that are only shooting through\n                      their own terrain feature.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      No penalty when shooting at <Keyword>Aircraft</Keyword>{\" \"}\n                      and units with W characteristic of 18+.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Dense Cover terrain imposes a hit penalty whenever it is\n                      between the firing model and its intended target (with the\n                      noted exceptions). It is not required for a unit to be\n                      fulfilling the criteria of ‘gaining the benefits of\n                      cover’, as described for Obstacles and Area Terrain, for\n                      this penalty to hit rolls to apply (but also note that any\n                      rule that ignores the benefits of cover, or that ignores\n                      the benefits of cover that impose a penalty on hit rolls,\n                      would still ignore that penalty).\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Unstable Position</>,\n              level: 5,\n              tags: [\"main\", \"9th\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      Models cannot be set up or end a move on top of this\n                      terrain feature.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Exposed Position</>,\n              level: 5,\n              tags: [\"main\", \"9th\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      Models do not receive <Rule>benefits of cover</Rule> while\n                      on top of this terrain feature.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Obscuring</>,\n              level: 5,\n              tags: [\"main\", \"9th\"],\n              children: [\n                {\n                  text: <>Blocks visibility if at least 5\" tall.</>,\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: <>Models on or within can see and be seen normally.</>,\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      <Keyword>Aircraft</Keyword> and models with W\n                      characteristic of 18+ are visible and can be targeted\n                      through this terrain feature following normal LOS rules.\n                      (the reverse is not true)\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Light Cover</>,\n              level: 5,\n              tags: [\"main\", \"9th\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      +1 to saving throws against ranged weapons for models\n                      receiveing the <Rule>benefits of cover</Rule> from this\n                      terrain feature.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: <>Invulnerable saving throws unaffected.</>,\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Heavy Cover</>,\n              level: 5,\n              tags: [\"main\", \"9th\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      +1 to saving throws against melee weapons for models that\n                      didn't charge this turn and are receiveing the{\" \"}\n                      <Rule>benefits of cover</Rule> from this terrain feature.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: <>Invulnerable saving throws unaffected.</>,\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Scaleable</>,\n              level: 5,\n              tags: [\"main\", \"9th\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      Only <Keyword>Infantry</Keyword>,{\" \"}\n                      <Keyword>Beasts</Keyword>, <Keyword>Swarm</Keyword> and{\" \"}\n                      <Keyword>Fly</Keyword> models can be set up or end a move\n                      on top of this terrain feature (exluding ground floor)\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      <Keyword>Infantry</Keyword>, <Keyword>Beasts</Keyword> and{\" \"}\n                      <Keyword>Swarm</Keyword> models can move through the\n                      floors, ceilings and gantries.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Inspiring</>,\n              level: 5,\n              tags: [\"main\", \"9th\"],\n              children: [\n                {\n                  text: <>+1 Ld if wholly within 6\"</>,\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Can be given <Keyword>Keyword(s)</Keyword> in which case\n                      the effect only applies to matching units.\n                    </>\n                  ),\n                  tags: [\"main\", \"9th\"],\n                  children: [],\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      text: <>The Battle Round</>,\n      level: 1,\n      tags: [\"core\"],\n      children: [\n        {\n          text: <>Out of Phase Rules</>,\n          level: 4,\n          tags: [\"core\"],\n          children: [\n            {\n              text: (\n                <>\n                  When resolving an out of phase rule, all rules that normally\n                  apply in that phase continue to apply.\n                </>\n              ),\n              tags: [\"core\", \"9th\"],\n              children: [],\n            },\n            {\n              text: (\n                <>\n                  Phase-specific Stratagems cannot be used when resolving out of\n                  phase rules.\n                </>\n              ),\n              tags: [\"core\", \"9th\"],\n              children: [],\n            },\n          ],\n        },\n        {\n          text: <>Command Phase</>,\n          level: 2,\n          tags: [\"core\", \"9th\"],\n          children: [\n            {\n              text: (\n                <>\n                  <Rule>Battle-forged CP bonus</Rule>: Gain 1 CP if army is\n                  Battleforged.\n                </>\n              ),\n              tags: [\"core\", \"9th\"],\n              children: [],\n            },\n            {\n              text: (\n                <>\n                  Resolve any rules that occur in the Command phase. Progress to\n                  the Movement phase (pg 10).\n                </>\n              ),\n              tags: [\"core\", \"9th\"],\n              children: [],\n            },\n            {\n              text: <>Progress to the Movement phase (pg 10).</>,\n              tags: [\"core\", \"9th\"],\n              children: [],\n            },\n          ],\n        },\n        {\n          text: <>Movement Phase</>,\n          level: 2,\n          tags: [\"core\"],\n          children: [\n            {\n              text: null,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      The Movement phase is split into two steps. First you move\n                      your units. Then you can set up Reinforcements that have\n                      not yet arrived.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                { text: <>1. Move Units</>, tags: [\"core\"], children: [] },\n                { text: <>2. Reinforcements</>, tags: [\"core\"], children: [] },\n              ],\n            },\n            {\n              text: <>1. Move Units</>,\n              level: 3,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: null,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: <>Select a unit in your army to move.</>,\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          When a unit moves it can either make a Normal Move,\n                          Advance or Remain Stationary.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Units that are within Engagement Range of any enemy\n                          models can only either Fall Back or Remain Stationary.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: <>Select another unit in your army to move.</>,\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Once all your units have moved, progress to the\n                          Reinforcements step (pg 11).\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Normal Move</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Normal Move:</Rule> Models move up to M\".\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Cannot move within Engagement Range of any enemy\n                          models.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Advance</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Advance:</Rule> Models move up to M+D6\".\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Cannot move within Engagement Range of enemy models.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>Units that Advance cannot shoot or charge this turn</>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Remain Stationary</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Remain Stationary:</Rule> Models cannot move\n                          this phase.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Fall Back</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Fall Back</Rule>: Models move up to M\".\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: <>Units that Fall Back cannot charge this turn.</>,\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Units that Fall Back cannot shoot or manifest psychic\n                          powers this turn unless they are Titanic.\n                        </>\n                      ),\n                      tags: [\"core\", \"9th\"],\n                      children: [],\n                    },\n                  ],\n                },\n              ],\n            },\n            {\n              text: <>2. Reinforcements</>,\n              level: 3,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      <Rule>Reinforcement unit:</Rule> Unit that starts the\n                      battle in a location other than the battlefield.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Set up your Reinforcement units, one at a time, as\n                      described by the rules that let them start the battle in\n                      locations other than the battlefield.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Reinforcement units cannot make a Normal Move, an Advance,\n                      Fall Back or Remain Stationary this turn.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Reinforcement units always count as having moved this\n                      turn.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Any Reinforcement unit not set up on the battlefield by\n                      the end of the battle counts as destroyed.\n                    </>\n                  ),\n                  tags: [\"core\", \"9th\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Once all your Reinforcement units have been set up,\n                      progress to the Psychic phase (pg 14).\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Advanced Rules</>,\n              level: 4,\n              tags: [\"advanced\", \"core\"],\n              children: [\n                {\n                  text: <>Moving Over Terrain</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          Models can move freely over terrain features 1\" or\n                          less in height.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Models cannot move through taller terrain features,\n                          but can climb up and down them.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Flying</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Keyword>Fly</Keyword> models can move over other\n                          models when they make a Normal Move, an Advance or\n                          when they Fall Back.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          <Keyword>Fly</Keyword> models ignore vertical\n                          distances when they make a Normal Move, an Advance or\n                          when they Fall Back.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Transports</>,\n                  level: 3,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: <>Transport Capacity</>,\n                      level: 5,\n                      tags: [\"core\"],\n                      children: [\n                        {\n                          text: (\n                            <>\n                              <Rule>Transport capacity:</Rule> Maximum number of\n                              models that can embark within the{\" \"}\n                              <Keyword>Transport</Keyword>.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              Units can start the battle embarked in a{\" \"}\n                              <Keyword>Transport</Keyword>.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                      ],\n                    },\n                    {\n                      text: <>Embark</>,\n                      level: 4,\n                      tags: [\"core\"],\n                      children: [\n                        {\n                          text: (\n                            <>\n                              Units can embark in a friendly{\" \"}\n                              <Keyword>Transport</Keyword> if every model ends a\n                              Normal Move, an Advance or a Fall Back within 3\"\n                              of it.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              A unit cannot embark within a{\" \"}\n                              <Keyword>Transport</Keyword> that is within\n                              Engagement Range of any enemy models.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              A unit cannot embark and disembark in the same\n                              phase.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              Units cannot do anything, or be affected in any\n                              way, while they are embarked within a{\" \"}\n                              <Keyword>Transport</Keyword>.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                      ],\n                    },\n                    {\n                      text: <>Disembark</>,\n                      level: 4,\n                      tags: [\"core\"],\n                      children: [\n                        {\n                          text: (\n                            <>\n                              Units that start their Movement phase embarked in\n                              a <Keyword>Transport</Keyword> can disembark this\n                              phase.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              A unit must disembark before their{\" \"}\n                              <Keyword>Transport</Keyword> moves.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              Disembarking units must be set up wholly within 3\"\n                              of their <Keyword>Transport</Keyword> and not\n                              within Engagement Range of any enemy models.\n                            </>\n                          ),\n                          tags: [\"core\", \"9th\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              Units that have disembarked count as having moved\n                              this turn.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                      ],\n                    },\n                    {\n                      text: <>Destroyed Transports</>,\n                      level: 4,\n                      tags: [\"core\"],\n                      children: [\n                        {\n                          text: (\n                            <>\n                              If a <Keyword>Transport</Keyword> is destroyed,\n                              resolve its Explodes ability (if it has one).\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>Any units embarked within must then disembark.</>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              Roll one D6 for each model that disembarked; for\n                              each 1, one model is destroyed.\n                            </>\n                          ),\n                          tags: [\"core\", \"9th\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              Units that disembarked cannot charge or perform\n                              Heroic Interventions this turn.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                      ],\n                    },\n                  ],\n                },\n                {\n                  text: <>Aircraft</>,\n                  level: 3,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: <>Minimum Move</>,\n                      level: 4,\n                      tags: [\"core\"],\n                      children: [\n                        {\n                          text: (\n                            <>\n                              <Rule>Minimum move:</Rule> Models must move at\n                              least their minimum M\".\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              If a model cannot make its minimum move, it is\n                              destroyed (unless you are using Strategic\n                              Reserves).\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                      ],\n                    },\n                    {\n                      text: <>Aircraft Egagement Range</>,\n                      level: 4,\n                      tags: [\"core\"],\n                      children: [\n                        {\n                          text: (\n                            <>\n                              Models can move within an enemy{\" \"}\n                              <Keyword>Aircraft</Keyword>’s Engagement Range.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              Models can move over <Keyword>Aircraft</Keyword>{\" \"}\n                              (and their bases) when they make any kind of move.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              <Keyword>Aircraft</Keyword> can make a Normal Move\n                              or an Advance even when within Engagement Range of\n                              enemy models.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              Units can make a Normal Move or an Advance if they\n                              are only within Engagement Range of enemy{\" \"}\n                              <Keyword>Aircraft</Keyword>\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                      ],\n                    },\n                    {\n                      text: (\n                        <>\n                          Heroic Interventations, Pile Ins, Consolidations and\n                          Aircrafts\n                        </>\n                      ),\n                      level: 4,\n                      tags: [\"core\"],\n                      children: [\n                        {\n                          text: (\n                            <>\n                              When a model performs a Heroic Intervention, piles\n                              in or consolidates, ignore{\" \"}\n                              <Keyword>Aircraft</Keyword> (unless the model\n                              moving can <Keyword>Fly</Keyword>).\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          text: <>Psychic Phase</>,\n          level: 2,\n          tags: [\"core\"],\n          children: [\n            {\n              text: null,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      Select a <Keyword>Psyker</Keyword> in your army to\n                      manifest its psychic powers.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Select another <Keyword>Psyker</Keyword> in your army to\n                      manifest its psychic powers.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Once all your <Keyword>Psykers</Keyword> have manifested\n                      psychic powers, progress to the Shooting phase (pg 15).\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Psychic Powers</>,\n              level: 3,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: null,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          All <Keyword>Psykers</Keyword> know Smite.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          <Keyword>Psykers</Keyword> will know additional\n                          psychic powers, as described on their datasheets.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Manifesting Psychic Powers</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: <>Select psychic power.</>,\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          You cannot select the same psychic power more than\n                          once per battle round, unless that power is Smite.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Attempt to manifest the psychic power by taking a\n                          Psychic test.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          The opponent can attempt to deny the psychic power by\n                          taking a Deny the Witch test.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          If successfully manifested, resolve the psychic\n                          power’s effects.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: <>Select another psychic power.</>,\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Psychic Tests</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Psychic test:</Rule> Passed if 2D6 equals or\n                          exceeds psychic power’s warp charge.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          If double 1 or double 6 rolled,{\" \"}\n                          <Keyword>Psyker</Keyword> suffers Perils of the Warp.{\" \"}\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Deny the Witch</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Deny the Witch:</Rule> Passed if 2D6 exceeds\n                          result of the opposing <Keyword>Psyker</Keyword>’s\n                          Psychic test.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Only one attempt can be made to deny each psychic\n                          power.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Smite</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Warp Charge 5</Rule>: A Psychic test of 5+ is\n                          required to manifest Smite.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Warp charge increases by 1 for each other attempt to\n                          manifest Smite made in this phase.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          {\" \"}\n                          If manifested, closest visible enemy unit in 18\"\n                          suffers D3 mortal wounds.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          If manifested with a Psychic test result of 11+, enemy\n                          instead suffers D6 mortal wounds.{\" \"}\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Perils of the Warp</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Perils of the Warp</Rule>: The{\" \"}\n                          <Keyword>Psyker</Keyword> unit manifesting the power\n                          suffers D3 mortal wounds.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          If <Keyword>Psyker</Keyword> unit is destroyed, the\n                          psychic power fails to manifest.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          {\" \"}\n                          If <Keyword>Psyker</Keyword> unit destroyed, every\n                          other unit within 6\" suffers D3 mortal wounds.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          text: <>Shooting Phase</>,\n          level: 2,\n          tags: [\"core\"],\n          children: [\n            {\n              text: null,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: <>Select a unit from your army to shoot with.</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      When a unit shoots, select targets then resolve attacks\n                      with any or all ranged weapons that models in that unit\n                      are equipped with.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>Select another unit from your army to shoot with.</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Once you have shot with all your units, progress to the\n                      Charge phase (pg 19).\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Select Targets</>,\n              level: 4,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      Select targets for all weapons before any attacks are\n                      resolved.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      At least one model in the target unit must be visible to\n                      the attacking model and within range of the attacking\n                      weapon.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      If a unit targets multiple units, all attacks against one\n                      unit must be resolved before resolving attacks against the\n                      next.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      If a unit shoots with multiple weapons, all attacks made\n                      with weapons that have the same profile must be resolved\n                      before resolving attacks with the next.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Locked in Combat</>,\n              level: 4,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      Units cannot shoot while they are within Engagement Range\n                      of any enemy units.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Units cannot shoot at targets within Engagement Range of\n                      any friendly units.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Number of Attacks</>,\n              level: 4,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      All of a ranged weapon’s attacks must be made against the\n                      same target unit.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>Number of attacks = number after weapon’s type. </>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Advanced Rules</>,\n              level: 4,\n              tags: [\"advanced\", \"core\"],\n              children: [\n                {\n                  text: <>Big Guns Never Tire</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Keyword>Monsters</Keyword> and{\" \"}\n                          <Keyword>Vehicles</Keyword> can shoot ranged weapons\n                          even if within Engagement Range of enemy units.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          <Keyword>Monsters</Keyword> and{\" \"}\n                          <Keyword>Vehicles</Keyword> can target other units,\n                          but cannot resolve these attacks while any enemy\n                          models remain within their Engagement Range.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Subtract 1 from hit rolls made when{\" \"}\n                          <Keyword>Monsters</Keyword> and{\" \"}\n                          <Keyword>Vehicles</Keyword> shoot Heavy weapons while\n                          any enemy\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Look Out, Sir</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          Cannot shoot at an enemy <Keyword>Character</Keyword>{\" \"}\n                          with 9 or less wounds while it is within 3\" of a\n                          friendly unit that contains 1{\" \"}\n                          <Keyword>Monsters</Keyword>, 1{\" \"}\n                          <Keyword>Vehicle</Keyword> or 3+ other models\n                          (excluding <Keyword>Character</Keyword> models with 9\n                          or less wounds) unless it is the closest target.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n              ],\n            },\n            {\n              text: <>Ranged Weapon Types</>,\n              level: 3,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: <>Assault</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>Can be shot even if firing model’s unit Advanced.</>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Subtract 1 from hit rolls if the firing model’s unit\n                          Advanced.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Heavy</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          Subtract 1 from hit rolls if firing model is{\" \"}\n                          <Keyword>Infantry</Keyword> and its unit has moved\n                          this turn.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Rapid Fire</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          Double number of attacks made if target is within half\n                          range.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Grenade</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          Only one model can use a Grenade when its unit shoots.{\" \"}\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Pistol</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          Can be shot even if firing model’s unit is within\n                          Engagement Range of enemy unit.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>Cannot be shot alongside any other type of weapon.</>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Advanced Rules</>,\n                  level: 4,\n                  tags: [\"advanced\", \"core\"],\n                  children: [\n                    {\n                      text: <>Blast Weapons</>,\n                      level: 4,\n                      tags: [\"core\"],\n                      children: [\n                        {\n                          text: (\n                            <>\n                              <Rule>Blast Weapons</Rule>: Minimum three attacks\n                              against units with 6+ models. Always make maximum\n                              number of attacks against units with 11+ models.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              Can never be used to attack units within the\n                              firing unit’s Engagement Range.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n            {\n              text: <>Making Attacks</>,\n              level: 3,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: <>1. Hit Roll</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Hit roll (ranged weapon)</Rule>: Roll one D6;\n                          hit scored if result equals or beats attacking model’s\n                          BS. Otherwise attack fails.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          <Rule>Hit roll (melee weapon)</Rule>: Roll one D6; hit\n                          scored if result equals or beats attacking model’s WS.\n                          Otherwise attack fails.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: <>Unmodified hit rolls of 1 always fail.</>,\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: <>Unmodified hit rolls of 6 always succeed.</>,\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>Hit rolls cannot be modified by more than -1 or +1.</>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>2. Wound Roll</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <div>\n                          <TableTitle>WOUND ROLL</TableTitle>\n                          <Table>\n                            <TableHead>\n                              <tr>\n                                <th>\n                                  ATTACKER'S STRENGTH vs TARGET'S TOUGHNESS\n                                </th>\n                                <th style={{ textAlign: \"center\" }}>\n                                  D6 RESULT REQUIRED\n                                </th>\n                              </tr>\n                            </TableHead>\n                            <TableBody>\n                              <tr>\n                                <td>\n                                  Is the Strength <Red>TWICE (or more)</Red>{\" \"}\n                                  than the Toughness\n                                </td>\n                                <td>\n                                  <DiceResult>2+</DiceResult>\n                                </td>\n                              </tr>\n                              <tr>\n                                <td>\n                                  Is the Strength <Red>GREATER</Red> than the\n                                  Toughness\n                                </td>\n                                <td>\n                                  <DiceResult>3+</DiceResult>\n                                </td>\n                              </tr>\n                              <tr>\n                                <td>\n                                  Is the Strength <Red>EQUAL</Red> than the\n                                  Toughness\n                                </td>\n                                <td>\n                                  <DiceResult>4+</DiceResult>\n                                </td>\n                              </tr>\n                              <tr>\n                                <td>\n                                  Is the Strength <Red>LOWER</Red> than the\n                                  Toughness\n                                </td>\n                                <td>\n                                  <DiceResult>5+</DiceResult>\n                                </td>\n                              </tr>\n                              <tr>\n                                <td>\n                                  Is the Strength <Red>HALF (or less)</Red> than\n                                  the Toughness\n                                </td>\n                                <td>\n                                  <DiceResult>6+</DiceResult>\n                                </td>\n                              </tr>\n                            </TableBody>\n                          </Table>\n                        </div>\n                      ),\n                      tags: [\"core\", \"table\"],\n                      children: [],\n                    },\n                    {\n                      text: null,\n                      tags: [],\n                      children: [\n                        {\n                          text: (\n                            <>\n                              <Rule>Wound roll</Rule>: Roll one D6 and compare\n                              attack’s S with target’s T on table to the left.\n                              Target wounded if score equals or beats the\n                              required result. Otherwise attack fails.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: <>Unmodified wound rolls of 1 always fail.</>,\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>Unmodified wound rolls of 6 always succeed.</>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              Wound rolls cannot be modified by more than -1 or\n                              +1.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                      ],\n                    },\n                  ],\n                },\n                {\n                  text: <>3. Allocate Attack</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Allocate attack</Rule>: Player commanding target\n                          unit selects one model in that unit. If a model in the\n                          unit has already lost wounds, or has already had\n                          attacks allocated to it this phase, they must select\n                          that model.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>4. Saving Throw</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Saving throw</Rule>: Roll one D6 and modify by\n                          the attack’s AP. If result less than the Sv of the\n                          selected model, the saving throw is failed and it\n                          suffers damage. Otherwise attack is saved.{\" \"}\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: <>Unmodified saving throws of 1 always fail.</>,\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>5. Inflict Damage</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Inflict damage</Rule>: The selected model loses\n                          a number of wounds equal to the attack’s D.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          If a model is destroyed by an attack, any excess\n                          damage inflicted by that attack is lost.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Advanced Rules</>,\n                  level: 4,\n                  tags: [\"advanced\", \"core\"],\n                  children: [\n                    {\n                      text: <>Invulnerable Saves</>,\n                      level: 4,\n                      tags: [\"core\"],\n                      children: [\n                        {\n                          text: (\n                            <>\n                              <Rule>Invulnerable save</Rule>: Saving throw that\n                              is never modified by attacking weapon’s AP.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              A model with an invulnerable save can use it\n                              instead of its normal Sv\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                      ],\n                    },\n                    {\n                      text: <>Mortal Wounds</>,\n                      level: 4,\n                      tags: [\"core\"],\n                      children: [\n                        {\n                          text: (\n                            <>\n                              Each mortal wound inflicted on a unit causes one\n                              model in the unit to lose one wound.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              No saving throws can be made against mortal\n                              wounds.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                        {\n                          text: (\n                            <>\n                              Mortal wounds inflicted by attacks in addition to\n                              normal damage always apply, even if normal damage\n                              saved.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                      ],\n                    },\n                    {\n                      text: <>Ignoring Wounds</>,\n                      level: 4,\n                      tags: [\"core\"],\n                      children: [\n                        {\n                          text: (\n                            <>\n                              A model can only use one rule to attempt to ignore\n                              each wound suffered.\n                            </>\n                          ),\n                          tags: [\"core\"],\n                          children: [],\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          text: <>Charge Phase</>,\n          level: 2,\n          tags: [\"core\"],\n          children: [\n            {\n              text: null,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      The Charge phase is split into two steps. First you charge\n                      with your units. Then your opponent performs Heroic\n                      Interventions.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>1. Charges</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>2. Heroic Interventions</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>1. Charges</>,\n              level: 3,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: null,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: <>Select a unit from your army to charge with.</>,\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: <>Charge with that unit (see below).</>,\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>Select another unit from your army to charge with.</>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Once all your units have charged, progress to the\n                          Heroic Interventions step (pg 20).\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Charging with a Unit</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>Declare targets of the charge (must be within 12\").</>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: <> Charge roll = 2D6\".</>,\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          If insufficient to move charging unit into Engagement\n                          Range of all targets, charge fails.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          If charge successful, models make their charge move.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Cannot make a charge move within Engagement Range of\n                          any unit that was not the target of the charge.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n              ],\n            },\n            {\n              text: <>2. Heroic Interventions</>,\n              level: 3,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: null,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          Select one <Keyword>Character</Keyword> unit to\n                          perform a Heroic Intervention.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Cannot perform a Heroic Intervention if any enemy\n                          units are in Engagement Range.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          {\" \"}\n                          Must be an enemy unit within 3\" horizontal and 5\"\n                          vertical to perform a Heroic Intervention.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Select another <Keyword>Character</Keyword> unit to\n                          perform a Heroic Intervention.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Once all your <Keyword>Character</Keyword> units have\n                          performed Heroic Interventions, progress to the Fight\n                          phase (pg 21).\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Performing a Heroic Intervention</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Heroic Intervention</Rule>: Move up to 3\".\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: <>Must end closer to the closest enemy model.</>,\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n              ],\n            },\n            {\n              text: <>Advanced Rules</>,\n              level: 4,\n              tags: [\"advanced\", \"core\"],\n              children: [\n                {\n                  text: <>Charging Over Terrain</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          Models can make a move freely over terrain features 1\"\n                          or less in height.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Models cannot move through taller terrain features,\n                          but can climb up and down them.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Flying when Charging</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Keyword>Fly</Keyword> models can move over other\n                          models when they make a charge move.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          <Keyword>Fly</Keyword> models move over terrain\n                          (including <Keyword>Buildings</Keyword>) like any\n                          other model when they make a charge move.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Overwatch</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Overwatch</Rule>: Before charge roll made, all\n                          charge targets that can fire Overwatch can do so.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Can never fire Overwatch while enemy units are in\n                          Engagement Range.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          When firing Overwatch, shoot with unit, but attacks\n                          only hit on unmodified 6s.{\" \"}\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          text: <>Fight Phase</>,\n          level: 2,\n          tags: [\"core\"],\n          children: [\n            {\n              text: null,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      Starting with your opponent, alternate selecting units to\n                      fight with.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      If one player has no more units left to fight with, their\n                      opponent then fights with their remaining units, one at a\n                      time.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: (\n                    <>\n                      Once all units have fought, progress to the Morale phase\n                      (pg 23).\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Charging Units Fight First</>,\n              level: 4,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      Units that made a charge move this turn fight before all\n                      other units.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Fight</>,\n              level: 4,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      When a unit fights, it piles in, then it makes close\n                      combat attacks, then it consolidates.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Pile In</>,\n              level: 4,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      <Rule>Pile in</Rule>: Move up to 3\".\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>Must end closer to the closest enemy model.</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>Make Close Combat Attacks</>,\n              level: 4,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: <>Which Models Fight</>,\n                  level: 5,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          A model can fight if it is in Engagement Range of an\n                          enemy unit.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          {\" \"}\n                          A model can fight if it is within ½\" of another model\n                          from their own unit that is within ½\" of an enemy\n                          unit.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Number of Attacks</>,\n                  level: 5,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          Number of attacks made by each model that can fight =\n                          A.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Select Targets</>,\n                  level: 5,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          If the attacking unit made a charge move this turn,\n                          its models can only target units it declared a charge\n                          against this turn, or units that performed a Heroic\n                          Intervention this turn.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Select targets for all attacks, before any attacks are\n                          resolved.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          If a unit targets multiple units, all attacks against\n                          one unit must be resolved before resolving attacks\n                          against the next.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Select Weapons</>,\n                  level: 5,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          Each close combat attack is made with a melee weapon.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          A model makes attacks using the close combat weapon\n                          profile if it has no other melee weapons.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          If a unit attacks with multiple weapons, all attacks\n                          made with weapons that have the same profile must be\n                          resolved before resolving attacks with the next.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n              ],\n            },\n            {\n              text: <>Consolidate</>,\n              level: 4,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      <Rule>Consolidate</Rule>: Move up to 3\".\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>Must end closer to the closest enemy model.</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          text: <>Morale Phase</>,\n          level: 2,\n          tags: [\"core\"],\n          children: [\n            {\n              text: null,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: (\n                    <>\n                      The Morale phase is split into two steps. First you take\n                      Morale tests for your units. Then you remove any\n                      out-ofcoherency models.\n                    </>\n                  ),\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>1. Morale Tests</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n                {\n                  text: <>2. Unit Coherency Checks</>,\n                  tags: [\"core\"],\n                  children: [],\n                },\n              ],\n            },\n            {\n              text: <>1. Morale Tests</>,\n              level: 3,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: null,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          Players alternate taking Morale tests for units from\n                          their army that have suffered casualties this turn.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          If one player has no more units left to take Morale\n                          tests, their opponent then takes Morale tests for\n                          their remaining units, one at a time.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Once all units have taken Morale tests, progress to\n                          the Unit Coherency Checks step (see opposite).\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Morale Tests</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Morale test</Rule> = D6 + number of models\n                          destroyed this turn.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Unmodified roll of 1 always a success (no models\n                          flee).\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          If Morale test exceeds unit’s Ld, one model flees and\n                          other models must take Combat Attrition tests.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Combat Attrition Tests</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Combat Attrition tests</Rule>: Roll one D6 for\n                          each remaining model in unit; for each 1, one\n                          additional model flees.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Subtract 1 from Combat Attrition tests if unit is\n                          below Half-strength.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n              ],\n            },\n            {\n              text: <>2. Unit Coherency Checks</>,\n              level: 3,\n              tags: [\"core\"],\n              children: [\n                {\n                  text: null,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          Remove models from units in your army that are not in\n                          unit coherency (pg 4).\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Once all out of coherency models have been removed (if\n                          any), the Morale phase ends.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          The player’s turn then ends and, unless the battle\n                          ends, the next player’s turn begins (pg 9).\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n        {\n          text: <>Missions</>,\n          level: 2,\n          tags: [\"core\"],\n          children: [\n            {\n              text: <>Advanced Rules</>,\n              level: 4,\n              tags: [\"advanced\", \"core\"],\n              children: [\n                {\n                  text: <>Objective Markers</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Objective marker</Rule>: 40mm round marker\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          {\" \"}\n                          Model in range of objective marker if within 3\"\n                          horizontally and 5\" vertically.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          Objective marker controlled by player with most models\n                          in range.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                    {\n                      text: (\n                        <>\n                          <Keyword>Aircraft</Keyword> and Fortifications cannot\n                          control objective markers.\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  text: <>Objective Secured</>,\n                  level: 4,\n                  tags: [\"core\"],\n                  children: [\n                    {\n                      text: (\n                        <>\n                          <Rule>Objective Secured</Rule>: Player controls\n                          objective marker if any of their models in range have\n                          this ability\n                        </>\n                      ),\n                      tags: [\"core\"],\n                      children: [],\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","import React, { useState, useEffect } from \"react\";\nimport { FaWindowClose } from \"react-icons/fa\";\nimport styled from \"styled-components\";\n\nconst updateMenus = (menus, id, forceSelect, forceUnselect) => {\n  return menus.map((menu) => {\n    return {\n      ...menu,\n      selected:\n        (forceSelect || (menu.id === id ? !menu.selected : menu.selected)) &&\n        !forceUnselect,\n      subMenus:\n        menu.subMenus &&\n        updateMenus(\n          menu.subMenus,\n          id,\n          forceSelect || (menu.id === id && !menu.selected),\n          forceUnselect || (menu.id === id && menu.selected)\n        ),\n    };\n  });\n};\n\nconst MenuItem = ({ id, label, tags, subMenus, selected, setMenu }) => {\n  const toggleMenuItem = (event, id) => {\n    event.stopPropagation();\n    setMenu((prev) => updateMenus(prev, id, false, false));\n  };\n\n  return (\n    <li onClick={(event) => toggleMenuItem(event, id)}>\n      <input type=\"checkbox\" checked={!!selected} onChange={() => {}} />\n      {label}\n      {subMenus?.length ? (\n        <ul>\n          {subMenus.map((sm) => (\n            <MenuItem key={sm.id} {...sm} setMenu={setMenu} />\n          ))}\n        </ul>\n      ) : null}\n    </li>\n  );\n};\n\nconst Menu = ({ isOpen, menu, onChange, onClose }) => {\n  const [menuState, setMenu] = useState(menu);\n\n  useEffect(() => {\n    onChange(menuState);\n  }, [menuState, onChange]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <StyledRoot>\n      <div onClick={onClose} style={{ cursor: \"pointer\" }}>\n        <FaWindowClose style={{ fontSize: \"40px\" }} />\n      </div>\n      <ul>\n        {menuState.map((item) => (\n          <MenuItem key={item.id} {...item} setMenu={setMenu} />\n        ))}\n      </ul>\n    </StyledRoot>\n  );\n};\n\nexport default Menu;\n\nconst StyledRoot = styled.div`\n  background: #979584;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  box-shadow: 0px 1px 12px 2px rgba(0, 0, 0, 0.5);\n\n  & ul {\n    background: transparent;\n  }\n\n  & ul:before {\n    content: none;\n  }\n\n  & li:before {\n    content: none;\n  }\n\n  & li:hover {\n    background: rgba(255, 255, 255, 0.2);\n    cursor: pointer;\n  }\n`;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport debounce from \"lodash/debounce\";\nimport ReactDOMServer from \"react-dom/server\";\nimport { FaBars } from \"react-icons/fa\";\nimport styled from \"styled-components\";\n\nimport bloodOfBaalFaq from \"../../data/blood_of_baal.json\";\nimport coreRules from \"../../data/core-rules\";\nimport necronsFaq from \"../../data/necrons.json\";\nimport ritualOfTheDamnedFaq from \"../../data/ritual_of_the_damned.json\";\nimport tauFaq from \"../../data/tau.json\";\nimport theGreaterGoodFaq from \"../../data/the_greater_good.json\";\nimport thousandSonsFaq from \"../../data/thousand_sons.json\";\nimport tyranidsFaq from \"../../data/tyranids.json\";\nimport Menu from \"./components/Menu\";\n\nconst applyFilter = (node, filter, parentMatches) => {\n  const text = ReactDOMServer.renderToString(node.text);\n\n  // Query\n  const queryMatch = text.toLowerCase().includes(filter.query);\n\n  // Faction Filtering\n  const filterMatch =\n    !filter?.factions?.length ||\n    node.tags.some((t) => filter.factions.includes(t));\n\n  const match = parentMatches || (queryMatch && filterMatch);\n\n  const children = node.children\n    .map((c) => applyFilter(c, filter, match))\n    .filter((n) => n);\n  return match || children.length > 0 ? { ...node, children: children } : null;\n};\n\nconst filterDebounceTime = 300;\n\nconst debouncedResetScroll = debounce(() => {\n  window.scrollTo(0, 0);\n}, filterDebounceTime);\n\nconst menu = [\n  {\n    id: \"rules\",\n    label: \"Rules\",\n    tags: [],\n    subMenus: [\n      { id: \"core\", label: \"Core Rules\", tags: [\"core\"] },\n      { id: \"main\", label: \"Other Rulebook Rules\", tags: [\"main\"] },\n    ],\n  },\n  {\n    id: \"spaceMarinesGroup\",\n    label: \"Space Marines\",\n    tags: [],\n    subMenus: [\n      {\n        id: \"space_marines\",\n        label: \"Space Marines\",\n        tags: [\"space_marines\"],\n      },\n      {\n        id: \"ultramarines\",\n        label: \"Ultramarines\",\n        tags: [\"ultramarines\"],\n      },\n    ],\n  },\n  {\n    id: \"xenos\",\n    label: \"Xenos\",\n    tags: [],\n    subMenus: [\n      {\n        id: \"tyranidsGroup\",\n        label: \"Tyranids\",\n        tags: [],\n        subMenus: [\n          {\n            id: \"tyranids\",\n            label: \"Tyranids\",\n            tags: [\"tyranids\"],\n          },\n          {\n            id: \"gsc\",\n            label: \"Genestealer Cult\",\n            tags: [\"genestealer_cult\"],\n          },\n        ],\n      },\n      {\n        id: \"tau\",\n        label: \"T'au Empire\",\n        tags: [\"tau\"],\n      },\n      {\n        id: \"necrons\",\n        label: \"Necrons\",\n        tags: [\"necrons\"],\n      },\n    ],\n  },\n  {\n    id: \"armiesOfChaos\",\n    label: \"Armies of Chaos\",\n    tags: [],\n    subMenus: [\n      {\n        id: \"ts\",\n        label: \"Thousand Sons\",\n        tags: [\"thousand_sons\"],\n      },\n    ],\n  },\n];\n\nconst menuToFactions = (menus) =>\n  menus\n    .map(({ selected, subMenus, tags }) => [\n      ...(selected ? tags : []),\n      ...(subMenus ? menuToFactions(subMenus) : []),\n    ])\n    .flat();\n\nconst RulesApp = () => {\n  const dataSource = useMemo(\n    () => ({\n      text: null,\n      tags: [],\n      children: [\n        coreRules,\n        tyranidsFaq,\n        bloodOfBaalFaq,\n        tauFaq,\n        theGreaterGoodFaq,\n        thousandSonsFaq,\n        ritualOfTheDamnedFaq,\n        necronsFaq,\n      ],\n    }),\n    []\n  );\n  const [factions, setFactions] = useState([]);\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  // const dataSource = tyranidsFaq\n  const [filtered, setFiltered] = useState(dataSource);\n  const [query, setQuery] = useState(\"\");\n  // const [breadcrumb, setBreadcrumb] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]);\n  // const updateBreadcrumb = ({ level, text }) => {\n  //   if(level <= 3) {\n  //     const idx = level - 1;\n  //     setBreadcrumb((prev) => {\n  //       const ret = [...prev];\n  //       ret.fill(\"\", idx);\n  //       ret[idx] = text;\n  //       return ret;\n  //     });\n  //   }\n  // };\n\n  const handleMenuClose = useCallback(() => setMenuOpen(false), []);\n\n  const debouncedApplyFilter = useMemo(\n    () =>\n      debounce((query, factions) => {\n        const filter = { query: query.toLowerCase(), factions };\n        console.log(\"applyFilter - Factions\", filter.factions);\n        setFiltered(applyFilter(dataSource, filter, false));\n      }, filterDebounceTime),\n    [dataSource]\n  );\n\n  useEffect(() => {\n    // I am displayed if I match OR if one of my children matches\n    // If I match, all of my children are matched\n    debouncedApplyFilter(query, factions);\n    debouncedResetScroll();\n  }, [query, factions, debouncedApplyFilter]);\n\n  // const debouncedBreadcrumb = useDebounce(breadcrumb, 300);\n\n  const handlMenuChange = useCallback(\n    (menu) => setFactions(menuToFactions(menu)),\n    []\n  );\n\n  return (\n    <>\n      {/* <Header>{debouncedBreadcrumb.filter((item) => item).join(\" > \")}</Header> */}\n      <Header>\n        <div\n          onClick={() => setMenuOpen((prev) => !prev)}\n          style={{ padding: \"4px\", cursor: \"pointer\" }}\n        >\n          <FaBars />\n        </div>\n        <SearchInput\n          type=\"text\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n      </Header>\n      <Container>\n        {filtered ? (\n          filtered.children.map((c, i) => (\n            <Node\n              key={i}\n              // updateBreadcrumb={updateBreadcrumb}\n              node={c}\n              level={1}\n            />\n          ))\n        ) : (\n          <h1>No matches found</h1>\n        )}\n      </Container>\n      <MenuContainer>\n        <Menu\n          isOpen={menuOpen}\n          menu={menu}\n          onChange={handlMenuChange}\n          onClose={handleMenuClose}\n        />\n      </MenuContainer>\n    </>\n  );\n};\n\nconst Rules = ({ nodes }) => (\n  <ul>\n    {nodes.map((node, idx) => (\n      <li key={idx}>{node.text}</li>\n    ))}\n  </ul>\n);\n\nconst headings = {\n  1: styled.h1``,\n  2: styled.h2``,\n  3: styled.h3``,\n  4: styled.h4``,\n  5: styled.h5``,\n  6: styled.h6``,\n};\n\nconst Node = ({ node, level, updateBreadcrumb }) => {\n  const actualLevel = node.level ?? level;\n  const advanced = node.tags.some((t) => t === \"advanced\");\n  const table = node.tags.some((t) => t === \"table\");\n  const Heading = headings[actualLevel];\n  let title = null;\n\n  if (node.text) {\n    if (table) {\n      title = node.text;\n    } else {\n      title = (\n        <Heading className={advanced ? \"advanced_title\" : \"\"}>\n          {/* <Waypoint\n              topOffset='60px'\n              onEnter={({ previousPosition, currentPosition }) => {\n                if (previousPosition === Waypoint.above && currentPosition === Waypoint.inside) {\n                  updateBreadcrumb({ text: '', level: actualLevel });\n                }\n              }}\n              onLeave={({ previousPosition, currentPosition }) => {\n                if (previousPosition === Waypoint.inside && currentPosition === Waypoint.above) {\n                  updateBreadcrumb({ text: ReactDOMServer.renderToString(node.text), level: actualLevel });\n                }\n              }}\n            /> */}\n          {node.text}\n        </Heading>\n      );\n    }\n  }\n\n  let children = null;\n  if (table) {\n  } else if (node.children.every((c) => c.children.length === 0 && !c.level)) {\n    children = <Rules nodes={node.children} />;\n  } else {\n    children = node.children?.map((c, i) => (\n      <Node\n        key={i}\n        node={c}\n        level={actualLevel + 1}\n        updateBreadcrumb={updateBreadcrumb}\n      />\n    ));\n  }\n\n  return (\n    <>\n      {title}\n      <div className={advanced ? \"advanced_rules\" : \"\"}>{children}</div>\n    </>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  max-width: 960px;\n`;\n\nconst Header = styled.div`\n  position: fixed;\n  background: #979584;\n  color: white;\n  top: 0;\n  width: 100%;\n  left: 0;\n  z-index: 1000;\n  padding: 8px;\n  font-family: \"Roboto Condensed\", sans-serif;\n  font-size: 22px;\n  font-weight: 700;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 1px 12px 2px rgba(0, 0, 0, 0.5);\n`;\n\nconst SearchInput = styled.input`\n  background: rgba(255, 255, 255, 0.2);\n  font-family: \"Roboto Condensed\", sans-serif;\n  font-size: 22px;\n  padding: 2px 8px;\n`;\n\nconst MenuContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nexport default RulesApp;\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Route, Switch, useHistory, useRouteMatch } from \"react-router-dom\";\n\nimport { useGameContext } from \"../../contexts/GameContext\";\n\n// STEPS\n// Name Players\n// Choose Game Type\n// Choose Secondaries\n// Setup Game Board\n// Play Game!\n\n// GAME\n// Size (Enum)\n// Pts\n// Type (Matched, Crusade, Open)\n// Current Round\n// Current Phase?\n// Current Player?\n\n// === PLAYER ===\n// Name\n// Faction (s?)\n// CPs\n// Won First Turn Roll\n// Took First Turn\n// Primary Objectives points (array, per round?)\n// Secondary Objectives (array of 3)\n// - Name\n// - Points\n// Fully Painted\n\n// NICE TO HAVE\n// Default Player\n\nconst GameApp = () => {\n  const match = useRouteMatch();\n  const history = useHistory();\n  const { gameState } = useGameContext();\n\n  useEffect(() => {\n    const step = gameState?.step ?? \"player1\";\n    history.replace(`${match.path}/${step}`);\n  }, []);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Switch>\n        <Route key=\"player1\" path={`${match.path}/player1`}>\n          <Player idx={0} nextPath=\"/game/player2\" />\n        </Route>\n        <Route key=\"player2\" path={`${match.path}/player2`}>\n          <Player idx={1} nextPath=\"/game/choose-mission\" />\n        </Route>\n        <Route key=\"choose-mission\" path={`${match.path}/choose-mission`}>\n          <ChooseMission />\n        </Route>\n        <Route\n          key=\"create-battlefield\"\n          path={`${match.path}/create-battlefield`}\n        >\n          5. Place Objective Markers 6. Create the Battlefield\n        </Route>\n        <Route key=\"secondaries\" path={`${match.path}/secondaries`}>\n          7. Select Secondaries\n        </Route>\n        <Route key=\"game-setup\" path={`${match.path}/game-setup`}>\n          8. Determine Attacker and Defender 9. Choose Deployment Zone 10.\n          Declare Reserves and Transports 11. Deploy Armies 12. Determine First\n          Turn 13. Resolve pre-battle abilities\n        </Route>\n        <Route key=\"make-war\" path={`${match.path}/make-war`}>\n          Play!\n        </Route>\n      </Switch>\n    </Container>\n  );\n};\n\nconst Player = ({ idx, nextPath }) => {\n  const history = useHistory();\n  const { gameState, setGameState } = useGameContext();\n\n  const player = gameState.players[idx];\n\n  const [name, setName] = useState(player.name);\n  const [faction, setFaction] = useState(player.faction);\n\n  const onSave = () => {\n    setGameState((prev) => {\n      const updated = { ...prev };\n      updated.players[idx] = {\n        name: name,\n        faction,\n      };\n      return updated;\n    });\n\n    history.push(nextPath);\n  };\n\n  const factions = [\"Space Marines\", \"Tyranids\"];\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <TextField\n        id=\"filled-basic\"\n        label=\"Name (optional)\"\n        placeholder={`Player ${idx + 1}`}\n        value={name}\n        onChange={(event) => setName(event.target.value)}\n      />\n      <FormControl variant=\"filled\">\n        <InputLabel id=\"faction\">Faction</InputLabel>\n        <Select\n          labelId=\"faction\"\n          value={faction}\n          onChange={(event) => setFaction(event.target.value)}\n        >\n          {factions.map((f) => (\n            <MenuItem key={f} value={f}>\n              {f}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      {faction ? (\n        <Button variant=\"contained\" color=\"primary\" onClick={onSave}>\n          Continue\n        </Button>\n      ) : null}\n    </Box>\n  );\n};\n\nconst SECONDARY_CATEGORIES = {\n  PURGE_THE_ENNEMY: \"Purge the Ennemy\",\n  NO_MERCY_NO_RESPITE: \"No Mercy, No Respite\",\n  BATTLEFIELD_SUPREMACY: \"Battlefield Supremacy\",\n  SHADOW_OPERATIONS: \"Shadow Operations\",\n  WARPCRAFT: \"Warpcraft\",\n  MISSION_SPECIFIC: \"Mission Specific\",\n};\n\nconst BATTLE_SIZES = {\n  COMBAT_PATROL: {\n    name: \"Combat Patrol\",\n    pts: 500,\n    CP: 3,\n  },\n  INCURSION: {\n    name: \"Incusrion\",\n    pts: 1000,\n    CP: 6,\n  },\n  STRIKE_FORCE: {\n    name: \"Strike Force\",\n    pts: 2000,\n    CP: 12,\n  },\n  ONSLAUGHT: {\n    name: \"Onslaught\",\n    pts: 3000,\n    CP: 18,\n  },\n};\n\nconst GAME_MODES = {\n  MATCHED_PLAY: {\n    name: \"Matched Play\",\n    missions: [\n      {\n        size: \"COMBAT_PATROL\",\n        name: \"Incisive Attack\",\n        source: \"core\",\n        briefing:\n          \"Two forces have dug in and fought to a stalemate. Adopting a new approach to the war, opportunistic bands of warriors now venture forth into no man’ land to seize vital ground and defeat the enemy with surgical assaults across the front.\",\n        rules: [\n          {\n            name: \"Sweep and Clear\",\n            description:\n              \"In this mission, if you control an objective marker at the end of your Command phase, it remains under your control, even if you have no models within range of it, unless your opponent controls it at the end of any subsequent phase.\",\n          },\n        ],\n        primary_objectives: [\n          {\n            name: \"Take and Hold\",\n            type: \"Progressive\",\n            description: (\n              <>\n                At the end of each player’s Command phase, the player whose turn\n                it is scores 5 victory points for each of the following\n                conditions they satisfy (for a maximum of 15 victory points):\n                <ul>\n                  <li>They control one or more objective markers.</li>\n                  <li>hey control two or more objective markers.</li>\n                  <li>\n                    They control more objective markers than their opponent\n                    controls.\n                  </li>\n                </ul>\n              </>\n            ),\n          },\n        ],\n        secondary_objectives: [\n          {\n            name: \"Surgical Assault\",\n            type: \"Progressive\",\n            category: SECONDARY_CATEGORIES.MISSION_SPECIFIC,\n            Description:\n              \"Score 5 victory points if you control the objective marker in your opponent’s deployment zone at the end of your turn.\",\n          },\n        ],\n        deployment: \"incisive_attack.png\",\n      },\n      {\n        size: \"COMBAT_PATROL\",\n        name: \"Outriders\",\n        source: \"core\",\n      },\n      {\n        size: \"COMBAT_PATROL\",\n        name: \"Encircle\",\n        source: \"core\",\n      },\n    ],\n  },\n  // CRUSADE: {\n  //   name: 'Crusade'\n  // },\n  // OPEN_PLAY: {\n  //   name: 'Open Play'\n  // },\n};\n\n// 1. Select Battle Size\n// 2. Muster Armies\n// 3. Determine Mission\n// 4. Read Mission Briefing\nconst ChooseMission = () => {\n  const history = useHistory();\n  const { gameState, setGameState } = useGameContext();\n\n  const [mode, setMode] = useState(gameState.mode ?? \"MATCHED_PLAY\");\n  const [size, setSize] = useState(gameState.size ?? \"COMBAT_PATROL\");\n  const [mission, setMission] = useState(gameState.mission);\n\n  const onSave = () => {\n    setGameState((prev) => ({ ...prev, mode, size, mission }));\n\n    history.push(\"game/secondaries\");\n  };\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <FormControl variant=\"filled\">\n        <InputLabel id=\"mode\">Game Mode</InputLabel>\n        <Select\n          labelId=\"mode\"\n          value={mode}\n          onChange={(event) => {\n            setMode(event.target.value);\n            setSize(\"COMBAT_PATROL\");\n            setMission(null);\n          }}\n        >\n          {Object.keys(GAME_MODES).map((key) => (\n            <MenuItem key={key} value={key}>\n              {GAME_MODES[key].name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl variant=\"filled\">\n        <InputLabel id=\"size\">Battle Size</InputLabel>\n        <Select\n          labelId=\"size\"\n          value={size}\n          onChange={(event) => {\n            setSize(event.target.value);\n            setMission(null);\n          }}\n        >\n          {Object.keys(BATTLE_SIZES).map((key) => (\n            <MenuItem key={key} value={key}>\n              {BATTLE_SIZES[key].name} - {BATTLE_SIZES[key].pts}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl variant=\"filled\">\n        <InputLabel id=\"mission\">Mission</InputLabel>\n        <Select\n          labelId=\"mission\"\n          value={mission?.name ?? \"\"}\n          onChange={(event) =>\n            setMission(\n              GAME_MODES[mode].missions.find(\n                (m) => m.name === event.target.value\n              )\n            )\n          }\n        >\n          {GAME_MODES[mode].missions\n            .filter((m) => m.size === size)\n            .map((m) => (\n              <MenuItem key={m.name} value={m.name}>\n                {m.name}\n              </MenuItem>\n            ))}\n        </Select>\n      </FormControl>\n      {mission && <Box>{mission.briefing}</Box>}\n      {mission && (\n        <Button variant=\"contained\" color=\"primary\" onClick={onSave}>\n          Continue\n        </Button>\n      )}\n    </Box>\n  );\n};\n\nexport default GameApp;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport { GameContextProvider } from \"./contexts/GameContext\";\n\nimport RulesApp from \"./apps/RulesApp\";\nimport GameApp from \"./apps/GameApp\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/game\">\n            <GameContextProvider>\n              <GameApp />\n            </GameContextProvider>\n          </Route>\n          <Route path=\"/rules\">\n            <RulesApp />\n          </Route>\n          <Route path=\"/\">\n            <div>\n              <Link to=\"/game\">Game</Link>\n            </div>\n            <div>\n              <Link to=\"/rules\">Rules</Link>\n            </div>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}